# Сортировка выбором

'''
# Цель: имеется масив, элементы которго можно сравнивать, и нужно отсортировать его по возрастанию
# Реализация: есть два индекса i и j, которые ссылаются на первый и второй элемент массива
# Индекс j пробегает все элементы массива, выбирает минимальный и меняет этот элемент с элементом по индексу i
# После i и j смещаются на индексы два и три, и всё повторяется по кругу, пока массив не отсортируется

# a = [-3, 5, 0, -8, 1, 10]

for i in range(len(a) - 1):
	mi = a[i] # минимальное значение
	indx_mi = i # индекс минимального значения
	for j in range(i + 1, len(a)): # поиск минимального значения
		if mi > a[j]:
			mi = a[j]
			indx_mi = j
	
	if indx_mi != i: # обмен значениями
		a[i], a[indx_mi] = a[indx_mi], a[i]

print(a)

# Максимальный объём вычислений: О(N^2)
'''

# Сортировка вставками

'''
# Цель: имеется масив, элементы которго можно сравнивать, и нужно отсортировать его по возрастанию
# Реальзация: левая часть массива отсортирована и мы сравниваем элемент справа с левыми и, пока тот меньше их, меняем местами

a = [-3, 5, 0, -8, 1, 10]

for i in range(1, len(a)): # перебор правой части
	for j in range(i, 0, -1): # перебор левой части
		if a[j] < a[j - 1]:
			a[j], a[j - 1] = a[j - 1], a[j]
		else:
			break
	
print(a)

# Максимальный объём вычислений: О(N^2)
'''

# Сортировка пузырьком

'''
# Цель: имеется масив, элементы которго можно сравнивать, и нужно отсортировать его по возрастанию
# Реализация: проверяет пары элементов. Если первый элемент больше следщего, то меняем местами
# После первой итерации последний элемент массива будет наибольшим
# Первый элемен как пузырёк всплывает вверх по массиву, пока является больше следующего элемента
# Постепенно в конец ставят большие элементы

a = [-3, 5, 0, -8, 1, 10]

for i in range(0, len(a) - 1):
	for j in range(0, len(a) - 1 - i): # переберёт все пары, кроме последнего элемента по i
		if a[j] > a[j + 1]:
			a[j], a[j + 1] = a[j + 1], a[j]

print(a)

# Максимальный объём вычислений: О(N^2)
'''

# Слияние двух упорядоченных списков

'''
# Цель: есть два отсортированных списка и их нужно совместить так, чтобы получился один отсортированный
# Реализация: проверяем который элемент больше из двух списков и добавляем в новый

a = [1, 4, 10, 11]
b = [2, 3, 3, 4, 8]
c = []

n = len(a)
m = len(b)

i = 0
j = 0
while i < n and j < m:
	if a[i] <= b[j]:
		c.append(a[i])
		i += 1
	else:
		c.append(b[j])
		j += 1

c += a[i:] + b[j:]

print(c)

# другая реальзация c += a[i:] + b[j:]
# if i < n:
# 	for k in range(i, n):
# 		c.append(a[k])
# elif j < m:
# 	for k in range(j, m):
# 		c.append(b[k])
'''

